# AUTOGENERATED! DO NOT EDIT! File to edit: ../notebooks/tokenizer.ipynb.

# %% auto 0
__all__ = ['MolTokenizer']

# %% ../notebooks/tokenizer.ipynb 3
import re

class MolTokenizer():
    
    """Converts SMILES into tokenized versions to train a language model."""

    def tokenize_mols(self, t):
        BOS = 'xxbos'
        pat = '(\[.*?\])' # Find special enviroments (e.g., [CH],[NH] etc)
        tokens = []
        t = t.replace('Br','L').replace('Cl','X') # Replace halogens
        atom_list = re.split(pat,t)
        for s in atom_list:
            if s.startswith('['):
                tokens.append(s)
            else:
                tokens += [x for x in list(s)]
        tokens = [x.replace('L','Br').replace('X','Cl') for x in tokens] # Decode halogens
        return [BOS] + tokens

    def __call__(self, items): return (self.tokenize_mols(t) for t in items)
